syntax = "proto3";

// =====================================================================
// Authenticate Service
// =====================================================================

message AuthenticateUserRequest {
    string email = 1;
    string password = 2;
}

message AuthenticateUserResponse {
    bool success = 1;
}

service AuthService {
    rpc AuthenticateUser (AuthenticateUserRequest) returns (AuthenticateUserResponse);
}

// =====================================================================
// GET ALL Students Service
// =====================================================================

message StudentDataRequest {}

message StudentUpdateRequest {
    int32 id = 1;
    string name = 2;
    int32 gender_id = 3;
    string birthday = 4;
    string email = 5;
    string phone = 6;
    int32 state_id = 7;
    string city = 8;
    string neighborhood = 9;
    string address = 10;
    string number = 11;
    string cep = 12;
    int32 payment_id = 13;
}

message StudentUpdatePaymentIdRequest {
    int32 student_id = 1;
    int32 financial_id = 2;
}

message StudentCreateRequest {
    string name = 2;
    int32 gender_id = 3;
    string birthday = 4;
    string email = 5;
    string phone = 6;
    int32 state_id = 7;
    string city = 8;
    string neighborhood = 9;
    string address = 10;
    string number = 11;
    string cep = 12;
    int32 payment_id = 13;
}

message StudentSearchRequest {
    string student_name = 1;
}

message Student {
    int32 id = 1;
    string name = 2;
    string gender_id = 3;
    string birthday = 4;
    string email = 5;
    string phone = 6;
    string state_id = 7;
    string city = 8;
    string neighborhood = 9;
    string address = 10;
    string number = 11;
    string cep = 12;
    string payment_id = 13;
}

message StudentDeleteRequest {
    int32 student_id = 1;
}

message StudentDataResponse {
    repeated Student student = 1;
}

message StudentUpdateResponse {
    bool success = 1;
}

message StudentCreateResponse {
    int32 id = 2;
}

service StudentService {
    rpc GetStudentData (StudentDataRequest) returns (StudentDataResponse);
    rpc UpdateStudentData (StudentUpdateRequest) returns (StudentUpdateResponse);
    rpc CreateStudentData (StudentCreateRequest) returns (StudentCreateResponse);
    rpc UpdateStudentPaymentId (StudentUpdatePaymentIdRequest) returns (StudentUpdateResponse);
    rpc DeleteStudentById (StudentDeleteRequest) returns (StudentUpdateResponse);
    rpc GetStudentByName (StudentSearchRequest) returns (StudentDataResponse);
}

// =====================================================================
// GET ALL States Service
// =====================================================================

message StatesDataRequest {}

message StateDataRequestById {
    int32 state_id = 1;
}

message StateResponse {
    int32 id = 1;
    string name = 2;
    string abbreviation = 3;
}

message StatesListDataResponse {
    repeated StateResponse state = 1;
}

service StateService {
    rpc GetStateData (StatesDataRequest) returns (StatesListDataResponse);
    rpc GetStateDataById (StateDataRequestById) returns (StateResponse);
}

// =====================================================================
// GET ALL Genders Service
// =====================================================================

message GendersDataRequest{}

message GendersDataRequestById{
    int32 gender_id = 1;
}

message GenderResponse {
    int32 id = 1;
    string name = 2;
}

message GenderListDataResponse {
    repeated GenderResponse gender = 1;
}

service GenderService {
    rpc GetGenderData (GendersDataRequest) returns (GenderListDataResponse);
    rpc GetGenderDataById (GendersDataRequestById) returns (GenderResponse);
}

// =====================================================================
// GET ALL Payment Service
// =====================================================================

message PaymentRequest {}

message PaymentRequestById {
    int32 payment_id = 1;
}

message PaymentUpdateRequest {
    int32 id = 1;
    int32 user_id = 2;
    int32 plan_id = 3;
    int32 method_id = 4;
}

message PaymentUpdateStudentIdRequest {
    int32 student_id = 1;
    int32 financial_id = 2;
}

message PaymentCreateRequest {
    int32 user_id = 2;
    int32 plan_id = 3;
    int32 method_id = 4;
}

message PaymentDeleteRequest {
    int32 payment_id = 1;
}

message PaymentResponse {
    int32 id = 1;
    int32 user_id = 2;
    int32 plan_id = 3;
    int32 method_id = 4;
}

message PaymentListResponse {
    repeated PaymentResponse payment = 1;
}

message PaymentUpdateResponse {
    bool success = 1;
}

message PaymentCreateResponse {
    int32 id = 1;
}

service PaymentService {
    rpc GetPaymentData (PaymentRequest) returns (PaymentListResponse);
    rpc GetPaymentDataById (PaymentRequestById) returns (PaymentResponse);
    rpc UpdatePaymentData (PaymentUpdateRequest) returns (PaymentUpdateResponse);
    rpc CreatePaymentData (PaymentCreateRequest) returns (PaymentCreateResponse);
    rpc UpdatePaymentStudentId (PaymentUpdateStudentIdRequest) returns (PaymentUpdateResponse);
    rpc DeletePaymentById (StudentDeleteRequest) returns (PaymentUpdateResponse);
}

// =====================================================================
// GET ALL Plan Service
// =====================================================================

message PlanRequest {}

message PlanRequestById {
    int32 plan_id = 1;
}

message PlanResponse {
    int32 id = 1;
    string name = 2;
    double value = 3;
}

message PlanListResponse {
    repeated PlanResponse plan = 1;
}

service PlanService {
    rpc GetPlanData (PlanRequest) returns (PlanListResponse);
    rpc GetPlanDataById (PlanRequestById) returns (PlanResponse);
}

// =====================================================================
// GET ALL Method Service
// =====================================================================

message MethodRequest {}

message MethodRequestById {
    int32 method_id = 1;
}

message MethodResponse {
    int32 id = 1;
    string name = 2;
    double discount = 3; 
}

message MethodListResponse {
    repeated MethodResponse method = 1;
}

service MethodService { 
    rpc GetMethodData (MethodRequest) returns (MethodListResponse);
    rpc GetMethodDataById (MethodRequestById) returns (MethodResponse);
}